{"name":"Counter-fitting","tagline":"Counter-fitting Word Vectors to Linguistic Constraints","body":"# Counter-fitting Word Vectors to Linguistic Constraints\r\nNikola Mrkšić (nm480@cam.ac.uk)\r\n\r\nThis repository contains the code and data for the method presented in [Counter-fitting Word Vectors to Linguistic Constraints](http://mi.eng.cam.ac.uk/~nm480/naaclhlt2016.pdf). The word vectors which achieve the (present) state of the art (0.74) on the SimLex-999 dataset are included in this repository, but can also be downloaded [here](http://mi.eng.cam.ac.uk/~nm480/counter-fitted-vectors.txt.zip).\r\n\r\n\r\n###Configuring the Tool\r\n\r\nThe counter-fitting tool reads all the experiment config parameters from ```experiment_parameters.cfg``` in the root directory. An alternative config file can be provided as the first (and only) argument to ```counterfitting.py```. \r\n\r\nThe config file specifies:\r\n* the location of the initial word vectors ```[default: word_vectors/glove.txt]```\r\n* the vocabulary to be used ```[default: lingustic_constraints/vocabulary.txt]``` \r\n* the sets of linguistic constraints to be injected into the vector space. The ```linguistic_constraints``` directory contains the synonymy (PPDB 2.0) and antonymy (WordNet and PPDB 2.0) constraints used in our experiments. \r\n* optionally, one can also specify the location of a dialogue domain ontology (in the DSTC format). This ontology will be used to infer additional antonymy constraints between slot values. The ```linguistic_constraints``` directory contains the two dialogue ontologies (DSTC2, DSTC3) used in our experiments. \r\n\r\nThe config file also specifies the six hyperparameters of the counter-fitting procedure (set to their default values in ```experiment_parameters.cfg```). \r\n\r\nThe results directory also contains the SimLex-999 dataset (Hill et al., 2014), required to perform the evaluation. \r\n\r\n\r\n###Running Experiments\r\n\r\n```python counterfitting.py experiment_parameters.cfg```\r\n\r\nRunning the experiment loads the word vectors specified in the config file and counter-fits them to the provided linguistic constraints. The procedure prints the updated word vectors to the results directory as ```counter_fitted_vectors.txt``` (one word vector per line). The produced ranking and the gold standard ranking for the SimLex-999 pairs are also printed to the results directory. \r\n\r\nThe word_vectors directory contains the (zipped) GloVe and Paragram-300-SL999 vectors constrained to our vocabulary (these need to be unzipped before the experiments are run). The high-scoring vectors for SimLex-999 can also be found in ```word_vectors/counter-fitted-vectors.txt.zip``` (or reproduced by applying counter-fitting to Paragram vectors).\r\n\r\n\r\n###References\r\n\r\nThe counter-fitting paper:\r\n```\r\n@InProceedings{mrksic:2016:naacl,\r\n  author    = {Nikola Mrk\\v{s}i\\'c and Diarmuid {\\'O S\\'eaghdha} and Blaise Thomson and Milica Ga\\v{s}i\\'c \r\n  \t\t\t   and Lina Rojas-Barahona and Pei-Hao Su and David Vandyke and Tsung-Hsien Wen and Steve Young},\r\n  title     = {Counter-fitting Word Vectors to Linguistic Constraints},\r\n  booktitle = {Proceedings of HLT-NAACL},\r\n  year      = {2016},\r\n}\r\n```\r\n\r\nIf you are using PPDB 2.0 (Pavlick et al., 2015) or WordNet (Miller, 1995) constraints, please cite these papers. If you are using the provided pre-trained vectors, please cite (Pennington et al., 2014) for GloVe vectors and (Wieting et al., 2015) for Paragram-SL-999 vectors. \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}